# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unittest & badge

on:
  push:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10"]
        os: ["ubuntu-latest"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }} at ${{ matrix.os }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        python --version
        poetry cache clear --all pypi
        poetry cache clear --all _default_cache
        poetry env use python3
        poetry lock
        poetry install

    - name: Login W&B
      shell: bash
      env:
        WANDB_API: ${{ secrets.WANDB_KEY }}
      run: |
        pip install wandb
        chmod +x $(which wandb)
        wandb login "$WANDB_API"

#    - name: Pytest
#      run: |
#        poetry run pytest --junitxml=reports/junit/junit.xml

#    - name: Run tests and collect coverage
#      run: pytest --cov app ${{ env.CODECOV_ATS_TESTS }}

#    - name: Badge
#      shell: bash
#      run: |
#        genbadge tests --output-file reports/tests-badge.svg
    - name: Generate coverage report
      run: |
        poetry run pytest --cov=.
    - name: Upload coverage reports to Codecov
      run: |
        # Replace `linux` below with the appropriate OS
        # Options are `alpine`, `linux`, `macos`, `windows`
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${CODECOV_TOKEN}



        

